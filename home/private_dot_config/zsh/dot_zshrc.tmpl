# ============================================================================
# Path
# ============================================================================

unset PATH
PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin"
export PATH

{{ if stat (joinPath .homebrew.prefix "/bin/brew") -}}
export PATH="{{ .homebrew.prefix }}/bin:{{ .homebrew.prefix }}/sbin:$PATH"
{{ end }}

# ============================================================================
# zinit
# ============================================================================

export ZINIT_HOME="$XDG_DATA_HOME"/zinit/zinit.git

{{ if stat (joinPath .chezmoi.homeDir ".local/share/zinit/zinit.git/zinit.zsh") -}}
source "$ZINIT_HOME"/zinit.zsh
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit for \
    light-mode \
  zsh-users/zsh-autosuggestions \
    light-mode \
  zsh-users/zsh-syntax-highlighting \
  zdharma-continuum/history-search-multi-word

zinit snippet OMZ::plugins/colored-man-pages/colored-man-pages.plugin.zsh
{{- end }}

# ============================================================================
# Options
# ============================================================================

# disable ^S and ^Q terminal freezing
unsetopt flowcontrol

# Changing directories
setopt AUTO_PUSHD                     # pushd instead of cd
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT                   # hide stack after cd
setopt PUSHD_TO_HOME                  # go home if no d specified

# Completion
setopt AUTO_LIST                      # list completions
setopt AUTO_MENU                      # TABx2 to start a tab complete menu
setopt NO_COMPLETE_ALIASES            # no expand aliases before completion
setopt LIST_PACKED                    # variable column widths
setopt COMPLETE_IN_WORD               # complete from both ends of a word

# Expansion and globbing
setopt EXTENDED_GLOB                  # like ** for recursive dirs
setopt GLOB_COMPLETE                  # complete options
setopt EXTENDED_GLOB                  # use extended globbing
setopt NUMERIC_GLOB_SORT              # sort globs numerically
setopt NO_CASE_GLOB                   # case-insensitive globbing

# History
setopt APPEND_HISTORY                 # append instead of overwrite file
setopt EXTENDED_HISTORY               # extended timestamps
setopt SHARE_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE              # omit from history if space prefixed
setopt HIST_REDUCE_BLANKS
setopt HIST_VERIFY                    # verify when using history cmds/params

# Initialisation

# Input/Output
setopt ALIASES                        # autocomplete switches for aliases
setopt AUTO_PARAM_SLASH               # append slash if autocompleting a dir
setopt COMBINING_CHARS                # unicode allowed when using wezterm
setopt CORRECT

# Job control
setopt CHECK_JOBS                     # prompt before exiting shell with bg job
setopt LONGLISTJOBS                   # display PID when suspending bg as well
setopt NO_HUP                         # do not kill bg processes

# Prompting
setopt PROMPT_SUBST                   # allow variables in prompt
# Scripts and functions Shell emulation
setopt INTERACTIVE_COMMENTS           # allow comments in shell

# Shell state

# zle
setopt NO_BEEP
setopt VI

# ============================================================================
# Completion settings
# Order by * specificity
# ============================================================================

# --------------------------------------------------------------------------
# Completion: Caching
# --------------------------------------------------------------------------

zstyle ':completion:*' use-cache true
zstyle ':completion:*' cache-path "$ZSH_CACHE_DIR"

# --------------------------------------------------------------------------
# Completion: Display
# --------------------------------------------------------------------------

# group all by the description above
zstyle ':completion:*' group-name ''

# Updated to respect LS_COLORS
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

zstyle ':completion:*' list-dirs-first yes

# go into menu mode on second tab (like current vim wildmenu setting)
# only if there's more than two things to choose from
zstyle ':completion:*' menu select=2

# show descriptions for options
zstyle ':completion:*' verbose yes

# in Bold, specify what type the completion is, e.g. a file or an alias or
# a cmd
zstyle ':completion:*:descriptions' format '%F{black}%B%d%b%f'
zstyle ':completion:*' expand 'yes'                    # Expand globs in completion
zstyle ':completion:*' glob 'yes'                      # Use globbing in completion
zstyle ':completion:*:*:*:*:*' menu select            # Interactive menu for glob completion

# --------------------------------------------------------------------------
# Completion: Matching
# --------------------------------------------------------------------------

# use case-insensitive completion if case-sensitive generated no hits
zstyle ':completion:*' matcher-list \
  'm:{[:lower:][:upper:]}={[:upper:][:lower:]}'

# don't complete usernames
zstyle ':completion:*' users ''

# don't autocomplete homedirs
zstyle ':completion::complete:cd:*' tag-order '! users'

# --------------------------------------------------------------------------
# Completion: Output transformation
# --------------------------------------------------------------------------

# expand completions as much as possible on tab
# e.g. start expanding a path up to wherever it can be until error
zstyle ':completion:*' expand yes

# process names
zstyle ':completion:*:processes-names' command \
  'ps c -u ${USER} -o command | uniq'

# rsync and SSH use hosts from ~/.ssh/config
[ -r "${HOME}/.ssh/config" ] && {
  # Vanilla parsing of config file :)
  # @see {@link https://github.com/Eriner/zim/issues/46#issuecomment-219344931}
  hosts=($h ${${${(@M)${(f)"$(cat ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
  #hosts=($(egrep '^Host ' "$HOME/.ssh/config" | grep -v '*' | awk '{print $2}' ))
  zstyle ':completion:*:ssh:*'    hosts $hosts
  zstyle ':completion:*:rsync:*'  hosts $hosts
}

# colorful kill command completion -- probably overridden by fzf
zstyle ':completion:*:*:kill:*:processes' list-colors \
  "=(#b) #([0-9]#)*=36=31"

# complete .log filenames if redirecting stderr
zstyle ':completion:*:*:-redirect-,2>,*:*' file-patterns '*.log'

# ============================================================================
# Aliases
# ============================================================================

alias rm="rm -i"

alias df="df -h"
alias md="mkdir -p"

alias grep="grep --color=auto"
alias ls="eza --group-directories-first"
alias la="eza -a --group-directories-first"
alias ll="eza -al --group-directories-first"
alias l="eza -al --group-directories-first"
alias tree="eza --tree --git-ignore"

{{ if eq .chezmoi.os "darwin" -}}
alias b="brew"
alias bi="brew install"
alias bs="brew search"
alias bu="brew uninstall"
alias bz="brew uninstall --zap"

alias bci="brew install --cask"
alias bcu="brew uninstall --cask"
alias bcr="brew reinstall --cask"
alias bcz="brew uninstall --cask --zap"
alias ci="brew install --cask"
{{- end }}

alias e={{ .editor }}

alias gg="lazygit"

alias cz="chezmoi"
alias cze="chezmoi edit"
alias dp="chezmoi apply -v"
alias cdd="cd $DOTFILES_DIR"

# ============================================================================
# Modules
# ============================================================================

# color complist
zmodload -i zsh/complist
#autoload -Uz colors; colors

# hooks -- used for prompt too
autoload -Uz add-zsh-hook
autoload -Uz vcs_info

# automatically fix things when pasted, works with url-quote-magic
autoload -Uz bracketed-paste-magic
zle -N bracketed-paste bracketed-paste-magic

# automatically quote URLs as they are typed
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# ============================================================================
# Keybindings
# ============================================================================

# VI mode, and make -M main === -M viins
bindkey -v

# ----------------------------------------------------------------------------
# Keybindings - Completion with tab
# Cancel and reset prompt with ctrl-c
# ----------------------------------------------------------------------------

# Shift-tab to select previous result
bindkey -M menuselect '^[[Z'  reverse-menu-complete

# Fix prompt (and side-effect of exiting menuselect) on ^C
bindkey -M menuselect '^C'    reset-prompt

# ----------------------------------------------------------------------------
# Keybindings: History navigation
# Don't bind in vicmd mode so I can edit multiline commands properly
# ----------------------------------------------------------------------------

# Up/Down search history filtered using already entered contents
bindkey '^[[A'  history-search-backward
bindkey '^[[B'  history-search-forward

# ============================================================================
# Functions
# ============================================================================

{{ if eq .chezmoi.os "darwin" -}}
function get-bundle-id() {
  if [[ -n "$1" ]]; then
    mdls -name kMDItemCFBundleIdentifier -r "$1"
  else
    echo "error: no application supplied"
  fi
}
{{- end }}

{{ if lookPath "yazi" -}}
function y() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}
{{ end -}}

function trash_dupes() {
  find . -type f -name "*.flac" | while read -r flac_file; do
    base_name=$(basename "${flac_file}" .flac)
    m4a_file=$(dirname "$flac_file")/"$base_name.m4a"
    print $m4a_file
    if [[ -f "$m4a_file" ]]; then
      echo "Trashing: $m4a_file"
      trash "$m4a_file"
    fi
  done
}

{{ if eq .chezmoi.os "darwin" -}}
FPATH={{ .homebrew.prefix }}/share/zsh/site-functions:$FPATH
{{- end }}

{{ if lookPath "mise" -}}
  PATH="$XDG_DATA_HOME/mise/shims:$PATH" 
{{- end }}

# Compinit: After zinit, before cdreplay
# https://carlosbecker.com/posts/speeding-up-zsh/
autoload -Uz compinit; compinit
